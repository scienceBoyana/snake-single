#+TITLE: Snake-Single Pipeline

[[file:metadata/images/logo3.jpg]]

Logo created by [[https://www.craiyon.com/][Craion]] (DALL-E mini instance)

* Description
Snake-Single is a pipeline we developed to process 10x genomics RNA-seq data (other modalities might come at a later timepoint) using [[https://github.com/snakemake/snakemake][Snakemake]] as its backbone.

* Installation
** Dependencies
- conda
- singularity / apptainer

Tested on Arch, Fedora 36 and Ubuntu 18.04 GNU/Linux systems

** STAR
This pipeline relies on STARsolo to do the alignment.
Since this pipeline was designed to run on a Ubuntu 18.04 server, which does not have glibc v2.29
We packaged STAR in a apptainer (formerly singularity) container.
When running the ~init.sh~ file, a pre-compiled container is downloaded from our site.
You can also build the container on your own on a system where you have root access:

#+begin_src bash
apptainer build metadata/apptainer/STAR.def metadata/apptainer/star.sif
#+end_src

** Getting started
Run the ~init.sh~ script to prepare the needed folder structure:
#+begin_src bash
bash init.sh
#+end_src

* Running the pipeline
~Snake-Single~ is written as snakemake pipeline, therefore the user can
specify any output that is defined in the [[file:Snakefile][Snakefile]] and snakemake will run all needed steps to generate the
requested file.
If input files are missing, snakemake will prompt accordingly.
The general syntax for running the pipeline is as follows:

#+begin_src bash
snakemake \
    --cores {number of cores} \
    --use-conda \
    {target}
#+end_src

Environments are either defined as Apptainer containers (STAR), or as conda environments.
The latter are defined in [[file:metadata/conda-envs/][this folder]].

** Preparing the genome files
For each species to be analyzed, the fasta and gtf files need to be provided.
If mouse is the target species, we implemented a ~Snakemake~ rule to Download the mosue genome ~GRCm39.105~ from ENSEMBL.
#+begin_src bash
snakemake --cores 1 get_mouse_genome
#+end_src

Otherwise, provide both files in ~input/genomes/fasta_gtf/{species}/{genome.fa,genes.gtf}~.

** Indexing the genome
STARsolo indices can be generated using the stored genomes by running:
#+begin_src bash
snakemake \
    --cores 15 \ # set appropriately to your system
    input/genomes/STAR_index/{species}  # e.g. mouse
#+end_src
The name of the genome must match to the folder in ~/input/genomes/fasta_gtf/{species}~.

** Data preparation
~Snake-Single~ expects ~FASTQ~ files as primary input which are formatted as follows:
#+begin_example
{identifier}_S1_L001_I1_001.fastq.gz
{identifier}_S1_L001_R1_001.fastq.gz
{identifier}_S1_L001_R2_001.fastq.gz
#+end_example
Where the ~S~ and ~L~ parameters should match similar NextSeq output patterns.
If you use files generated by a different machine, e.g. HiSeq, please rename your files accordingly.

Place your data in:
#+begin_example
./input/fastq/{species}/{samplegroup}/{batch}
#+end_example

Where the ~species~ folder name matches the genome name which you indexed before.
The ~samplegroup~ folder name can be chosen freely.
For example you could create a folder per tissue, conditions, biological replicate (if you plan to generate multiple technical replicates).
The ~batch~ folder should contain either subfolders, as generated by a NextSeq machine, or the input ~FASTQ~ files directly.
~Snake-Single~ assumes that all containing ~FASTQ~ files belong to one sequencing run.


* References
- Haghverdi L, Lun ATL, Morgan MD, Marioni JC (2018). “Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors.” _Nat. Biotechnol._, *36*(5), 421-427. doi: 10.1038/nbt.4091 (URL: https://doi.org/10.1038/nbt.4091).
- James Melville (2021). uwot: The Uniform Manifold Approximation and Projection (UMAP) Method for Dimensionality Reduction. R package version 0.1.11. https://CRAN.R-project.org/package=uwot
- Peter Kharchenko, Viktor Petukhov and Evan Biederstedt (2022). leidenAlg: Implements the Leiden Algorithm via an R Interface. R package version 1.0.3. https://CRAN.R-project.org/package=leidenAlg
- McGinnis, Christopher S., Lyndsay M. Murrow, and Zev J. Gartner. "DoubletFinder: doublet detection in single-cell RNA sequencing data using artificial nearest neighbors." Cell systems 8.4 (2019): 329-337.

* Notes and ToDos
** [ ] STARsolo multimappers
[[https://github.com/alexdobin/STAR/blob/master/docs/STARsolo.md#multi-gene-reads][link]]
